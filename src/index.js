/**
 * ProcessMaker API
 * An API to access ProcessMaker core functionality
 *
 * OpenAPI spec version: 1.0.0
 * Contact: oleg@processmaker.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/DateFull', 'model/Error', 'model/ErrorArray', 'model/Group', 'model/GroupAttributes', 'model/JsonApiCollection', 'model/JsonApiCollection1', 'model/JsonApiCreatedItem', 'model/JsonApiCreatedItem1', 'model/JsonApiItem', 'model/JsonApiItem1', 'model/JsonApiUpdateItem', 'model/JsonApiUpdateItem1', 'model/Meta', 'model/Pagination', 'model/PaginationLinks', 'model/User', 'model/UserAttributes', 'api/ProcessmakerApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/DateFull'), require('./model/Error'), require('./model/ErrorArray'), require('./model/Group'), require('./model/GroupAttributes'), require('./model/JsonApiCollection'), require('./model/JsonApiCollection1'), require('./model/JsonApiCreatedItem'), require('./model/JsonApiCreatedItem1'), require('./model/JsonApiItem'), require('./model/JsonApiItem1'), require('./model/JsonApiUpdateItem'), require('./model/JsonApiUpdateItem1'), require('./model/Meta'), require('./model/Pagination'), require('./model/PaginationLinks'), require('./model/User'), require('./model/UserAttributes'), require('./api/ProcessmakerApi'));
  }
}(function(ApiClient, DateFull, Error, ErrorArray, Group, GroupAttributes, JsonApiCollection, JsonApiCollection1, JsonApiCreatedItem, JsonApiCreatedItem1, JsonApiItem, JsonApiItem1, JsonApiUpdateItem, JsonApiUpdateItem1, Meta, Pagination, PaginationLinks, User, UserAttributes, ProcessmakerApi) {
  'use strict';

  /**
   * An_API_to_access_ProcessMaker_core_functionality.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var ProcessMakerApi = require('index'); // See note below*.
   * var xxxSvc = new ProcessMakerApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new ProcessMakerApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new ProcessMakerApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new ProcessMakerApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 1.0.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The DateFull model constructor.
     * @property {module:model/DateFull}
     */
    DateFull: DateFull,
    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error: Error,
    /**
     * The ErrorArray model constructor.
     * @property {module:model/ErrorArray}
     */
    ErrorArray: ErrorArray,
    /**
     * The Group model constructor.
     * @property {module:model/Group}
     */
    Group: Group,
    /**
     * The GroupAttributes model constructor.
     * @property {module:model/GroupAttributes}
     */
    GroupAttributes: GroupAttributes,
    /**
     * The JsonApiCollection model constructor.
     * @property {module:model/JsonApiCollection}
     */
    JsonApiCollection: JsonApiCollection,
    /**
     * The JsonApiCollection1 model constructor.
     * @property {module:model/JsonApiCollection1}
     */
    JsonApiCollection1: JsonApiCollection1,
    /**
     * The JsonApiCreatedItem model constructor.
     * @property {module:model/JsonApiCreatedItem}
     */
    JsonApiCreatedItem: JsonApiCreatedItem,
    /**
     * The JsonApiCreatedItem1 model constructor.
     * @property {module:model/JsonApiCreatedItem1}
     */
    JsonApiCreatedItem1: JsonApiCreatedItem1,
    /**
     * The JsonApiItem model constructor.
     * @property {module:model/JsonApiItem}
     */
    JsonApiItem: JsonApiItem,
    /**
     * The JsonApiItem1 model constructor.
     * @property {module:model/JsonApiItem1}
     */
    JsonApiItem1: JsonApiItem1,
    /**
     * The JsonApiUpdateItem model constructor.
     * @property {module:model/JsonApiUpdateItem}
     */
    JsonApiUpdateItem: JsonApiUpdateItem,
    /**
     * The JsonApiUpdateItem1 model constructor.
     * @property {module:model/JsonApiUpdateItem1}
     */
    JsonApiUpdateItem1: JsonApiUpdateItem1,
    /**
     * The Meta model constructor.
     * @property {module:model/Meta}
     */
    Meta: Meta,
    /**
     * The Pagination model constructor.
     * @property {module:model/Pagination}
     */
    Pagination: Pagination,
    /**
     * The PaginationLinks model constructor.
     * @property {module:model/PaginationLinks}
     */
    PaginationLinks: PaginationLinks,
    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User: User,
    /**
     * The UserAttributes model constructor.
     * @property {module:model/UserAttributes}
     */
    UserAttributes: UserAttributes,
    /**
     * The ProcessmakerApi service constructor.
     * @property {module:api/ProcessmakerApi}
     */
    ProcessmakerApi: ProcessmakerApi
  };

  return exports;
}));
